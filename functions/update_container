#
# https://github.com/community-scripts/ProxmoxVE/raw/main/misc/update-repo.sh
#
function update_container() {
    containers=("$@")

    if [ ${#containers[@]} -eq 0 ]; then
        # If no container IDs are provided, populate the containers array from pct list
        containers=($(pct list | awk 'NR>1 {print $1}'))
    fi

    for container in "${containers[@]}"; do
        os=$(pct config "$container" | awk '/^ostype/ {print $2}')

        if [[ "$os" == "ubuntu" || "$os" == "debian" ]]; then
            echo -e "${BL}[Info]${GN} Checking /usr/bin/update in ${BL}$container${CL} (OS: ${GN}$os${CL})"

            if pct exec "$container" -- [ -e /usr/bin/update ]; then
                if pct exec "$container" -- grep -q "community-scripts/ProxmoxVE" /usr/bin/update; then
                    echo -e "${RD}[No Change]${CL} /usr/bin/update is already up to date in ${BL}$container${CL}.\n"
                elif pct exec "$container" -- grep -q -v "tteck" /usr/bin/update; then
                    echo -e "${RD}[Warning]${CL} /usr/bin/update in ${BL}$container${CL} contains a different entry (${RD}tteck${CL}). No changes made.\n"
                else
                    pct exec "$container" -- bash -c "sed -i 's/tteck\\/Proxmox/community-scripts\\/ProxmoxVE/g' /usr/bin/update"

                    if pct exec "$container" -- grep -q "community-scripts/ProxmoxVE" /usr/bin/update; then
                        echo -e "${GN}[Success]${CL} /usr/bin/update updated in ${BL}$container${CL}.\n"
                    else
                        echo -e "${RD}[Error]${CL} /usr/bin/update in ${BL}$container${CL} could not be updated properly.\n"
                    fi
                fi
            else
                echo -e "${RD}[Error]${CL} /usr/bin/update not found in container ${BL}$container${CL}.\n"
            fi
        else
            echo -e "${BL}[Info]${GN} Skipping ${BL}$container${CL} (not Debian/Ubuntu)\n"
        fi
    done
}
